{{ form_start(form, { attr: {id: 'post-form'}}) }}
{#  {{ form_widget(form) }}#}

<div class="mb-3">
    {{ form_label(form.image) }}
    {{ form_widget(form.image) }}
    {{ form_errors(form.image) }}
</div>

<div class="mb-3">
    {{ form_label(form.name) }}
    {{ form_widget(form.name) }}
    {{ form_errors(form.name) }}
</div>
<div class="mb-3">
    {{ form_label(form.category) }}
    {{ form_widget(form.category) }}
    {{ form_errors(form.category) }}
</div>
<div class="mb-3">
    {{ form_label(form.content) }}
    {{ form_widget(form.content) }}
    {{ form_errors(form.content) }}
</div>
<div class="mb-3">
    {{ form_label(form.publishedAt) }}
    {{ form_widget(form.publishedAt) }}
    {{ form_errors(form.publishedAt) }}
</div>
<div class="mb-3">
    <h3>Tags:</h3>
    <ul id="tags"
        data-prototype="{{ form_widget(form.tags.vars.prototype)|e('html_attr') }}"
        data-index="{{ form.tags|length }}"
    >
    {% for tagForm in form.tags %}
        <li>
            {{ form_label(tagForm.name) }}
            {{ form_widget(tagForm.name) }}
            {{ form_errors(tagForm.name) }}
            <button type="button" class="btn" onclick="delTag(this)">[X]</button>
        </li>
    {% endfor %}
    </ul>
    <button type="button" class="btn" onclick="addTag()">add new tag</button>
</div>
{{ form_end(form) }}

<div class="form-group row">
    <div class="col-lg-4 col-lg-offset-2">
        <a class="btn btn-white btn-sm" href="{{ path('app_admin_post_index') }}">back to list</a>
        <button class="btn btn-primary btn-sm" form="post-form" type="submit">{{ button_label|default('Save') }}</button>

        {% if post.id > 0 %}
            {{ include('admin/post/_delete_form.html.twig') }}
        {% endif %}
    </div>
</div>

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/vanillajs-datepicker@1.3.4/dist/css/datepicker.min.css">
<script src="https://cdn.jsdelivr.net/npm/vanillajs-datepicker@1.3.4/dist/js/datepicker-full.min.js"></script>

<script>
    const elem = document.querySelector('#post_publishedAt');
    const datepicker = new Datepicker(elem, {
        // ...options
    });

    $(function(){
        const $summerNote = $('#post_content').summernote({
            //Define the callback
            callbacks: {
                onImageUpload: function(files) {
                    const file = files[0];

                    let data = new FormData();
                    data.append("file", file);

                    $.ajax({
                        data: data,
                        type: "POST",
                        url: "{{ path('admin_file_uploader') }}", //Your own back-end uploader
                        cache: false,
                        contentType: false,
                        processData: false,
                        success: function(response) {
                            if (response.status && response.filename) {
                                //$('.summernote').summernote('editor.insertImage', response.filename);
                                let img = new Image;
                                img.src = response.filename;

                                $summerNote.summernote('insertNode', img);
                            }
                        }
                    });
                },
            },
        });
    })

    function addTag()
    {
        const tags = document.querySelector('#tags');
        const li = document.createElement('li');
        const index = tags.dataset.index;
        li.innerHTML = tags.dataset.prototype.replaceAll('__name__', index);
        tags.append(li);

        tags.dataset.index++;
    }

    function delTag(btn) {
        btn.closest('li').remove();
    }
</script>
